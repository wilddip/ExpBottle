# ExpBottle Configuration vNext (This will be updated by the plugin if needed)
# Plugin by YourName - Find more cool stuff at your.website!

# --- General Settings ---
# Default language for plugin messages if a player's locale is not found or its lang file doesn't exist.
# Should correspond to a file name in the 'plugins/ExpBottle/lang/' folder (e.g., "en_US", "ru_RU").
default_language: "en_US"

# --- Command Configuration ---
command:
  # The main command name (without the starting '/')
  # Example: "exp" means the command will be /exp
  name: "exp"

  # Aliases for the main command.
  # These are alternative names for the main command (e.g., /xp instead of /exp).
  # IMPORTANT: Changes to aliases require a FULL PLUGIN RELOAD/RESTART (e.g., using PlugMan).
  # The /exp reload command DOES NOT update aliases.
  aliases: ["xp"]

  # --- Settings for /exp get ---
  get:
    # What to do when the player's inventory is full when getting a bottle?
    # Options:
    #   "error" - Show an error message, and the bottle is not created.
    #   "drop"  - Drop the bottle on the ground near the player.
    inventory_full_action: "drop"

  # --- Settings for /exp send ---
  # `send` section no longer contains sound; it's moved to `sound_settings`
  # send:

  # --- Settings for /exp split ---
  split:
    # Minimum levels required for each bottle when splitting by levels.
    min_levels_per_bottle: 10
    # When splitting by levels, the level amount must be a multiple of this value.
    # Set to 1 to allow any level amount (respecting min_levels_per_bottle).
    level_step: 1
    # When splitting by experience points, the EXP amount must be a multiple of this value.
    # Set to 1 to allow any EXP amount.
    exp_step: 100 # Example: if player uses /exp split 250e, and exp_step is 100, it might be an error or adjusted.

# --- Sound Settings ---
# Sound names from Bukkit Sound enum: https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/Sound.html
# Example: "ENTITY_ITEM_PICKUP", "BLOCK_NOTE_BLOCK_BASSDDRUM"
sound_settings:
  get:
    enabled: true
    name: "ENTITY_ITEM_PICKUP"
    volume: 1.0
    pitch: 1.0
  send_receive: # For /exp send and /exp give (sound plays for the receiver)
    enabled: true
    name: "ENTITY_PLAYER_LEVELUP"
    volume: 1.0
    pitch: 1.0
  split:
    enabled: true
    name: "BLOCK_AMETHYST_BLOCK_CHIME"
    volume: 1.0
    pitch: 1.0

# --- Bottle Item Configuration ---
bottle_lore:
  # Lore for the experience bottles. Uses MiniMessage format.
  #
  # Currently available placeholders (automatically filled by the plugin):
  #   <amount_xp>    - Experience points stored in the bottle.
  #   <full_levels>  - Approximate full levels the stored experience represents.
  #   <player>       - Name of the player/entity that created this bottle.
  #
  # Example using available placeholders:
  - "<gray>Contains <yellow><amount_xp></yellow> experience points.</gray>"
  - "<gray>(Equivalent to level <yellow><full_levels></yellow>)"
  - "<gray>Packed by: <white><player></white>"
  # You can add more lines to the lore if you wish.
  # If you extend the plugin to provide more custom placeholders for lore,
  # you would add them to the plugin's code first, then you could use them here.

# --- Bottle Item Stack Size ---
# Maximum number of experience bottles that can stack in a single inventory slot.
# Vanilla Minecraft default for experience bottles is 16.
# Changing this might require players to re-log or for items to be re-stacked manually if they already have bottles.
bottle_max_stack_size: 16

# --- Placeholder Guide for Language Files (lang/*.yml) ---
# The following placeholders can be used in your language files (e.g., lang/en_US.yml).
# Remember to use them with MiniMessage syntax, e.g., <placeholder_name>.
# These are automatically replaced by the plugin based on the context of the message.
#
# General & Command Context:
#   <command>              - The command alias used by the player (e.g., "exp", "xp").
#   <input>                - Invalid input provided by the player.
#   <target>               - Name of the target player in commands like /exp send, /exp give.
#   <sender>               - Name of the player sending experience or items.
#
# Player Experience Info (primarily for /exp info, but can be used elsewhere if contextually available):
#   <level>                - Player's current level.
#   <exp>                  - Player's current experience points within the current level.
#   <next_level_exp>       - Experience points needed for the next level.
#   <total_exp>            - Player's total accumulated experience points.
#
# Amounts & Values (used across various commands like get, send, split, give):
#   <amount_xp>            - Amount specified or calculated in experience points.
#   <amount_lvl>           - Amount specified or calculated in levels.
#   <amount_val>           - Generic amount value (primarily for /exp give success messages).
#   <type>                 - Type of amount (e.g., "levels", "experience points" - typically fetched from 'types' section in lang files).
#
# /exp split Specific:
#   <min_levels>           - Minimum levels per bottle (from config setting command.split.min_levels_per_bottle).
#   <min_exp>              - Minimum experience points per bottle (calculated or from future config).
#   <min_levels_equiv>     - Level equivalent for <min_exp>.
#   <level_step>           - Required step for level amounts (from config setting command.split.level_step).
#   <exp_step>             - Required step for experience point amounts (from config setting command.split.exp_step).
#   <amount_lvl_per_bottle> - Levels per bottle specified by the player for splitting.
#   <amount_xp_per_bottle>  - Experience points per bottle (calculated from levels for splitting).
#   <amount_points_per_bottle> - Experience points per bottle specified by the player for splitting.
#   <count>                - Number of bottles created or to be created.
#   <free_slots>           - Number of free inventory slots (for /exp split error messages).
#   <amount_points>        - Points per bottle (often synonymous with <amount_points_per_bottle> in split success messages).
#   <remaining_xp>         - Experience points remaining after splitting.
#
# /exp give Specific:
#   <required>             - Number of inventory slots required for the target player.
#   <available>            - Number of inventory slots available for the target player.
#   (Also uses <count>, <target>, <sender>, <amount_val>, <type>)
#
# Note: Not all placeholders are available in every single message. Availability depends on the specific
# command and situation. The plugin provides them where they make sense.
# The 'types' section in your lang files (e.g., types.levels.L, types.points) is used to fill <type> for some messages.

# --- Advanced Settings ---
# Configuration version. Do not change this manually.
# The plugin uses this to handle automatic updates to the config file structure in future versions.
config_version: 5