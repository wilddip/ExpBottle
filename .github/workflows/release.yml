name: 🚀 Build & Release ExpBottle

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_and_release:
    name: 📦 Build, GitHub Release & Modrinth Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: 🛠️ Build with Maven
        run: mvn -B package --file pom.xml

      - name: 📝 Extract Project Info
        id: project_info
        run: |
          echo "name=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_OUTPUT
          echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
          echo "jar_path=target/$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar" >> $GITHUB_OUTPUT
          echo "jar_filename=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar" >> $GITHUB_OUTPUT
          echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "modrinth_version_number=${{ github.ref_name#v }}" >> $GITHUB_OUTPUT
          
      - name: 📜 Get Changelog from Git
        id: changelog_data
        run: |
          TAG_NAME="${{ steps.project_info.outputs.tag_name }}"
          TAG_MSG=$(git tag -l "${TAG_NAME}" --format='%(contents)')
          COMMIT_MSG_FULL=$(git log -1 --pretty=format:%B "${TAG_NAME}")
          
          if [ -z "$TAG_MSG" ]; then
            CHANGELOG_BODY="$COMMIT_MSG_FULL"
          else
            CHANGELOG_BODY="$TAG_MSG"
          fi
          
          CHANGELOG_BODY="${CHANGELOG_BODY//'%'/'%25'}"
          CHANGELOG_BODY="${CHANGELOG_BODY//$'\n'/'%0A'}"
          CHANGELOG_BODY="${CHANGELOG_BODY//$'\r'/'%0D'}"
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "${CHANGELOG_BODY}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📦 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.project_info.outputs.tag_name }}
          name: Release ${{ steps.project_info.outputs.tag_name }}
          body: ${{ steps.changelog_data.outputs.changelog }}
          draft: false
          prerelease: false
          files: ${{ steps.project_info.outputs.jar_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📮 Publish to Modrinth
        uses: cloudnode-pro/modrinth-publish@v2
        with:
          token: ${{ secrets.MODRINTH_PAT }}
          project: ${{ vars.MODRINTH_PID }}
          name: "ExpBottle ${{ steps.project_info.outputs.modrinth_version_number }}"
          version: ${{ steps.project_info.outputs.modrinth_version_number }}
          changelog: ${{ steps.changelog_data.outputs.changelog }}
          loaders: ${{ vars.MODRINTH_LABELS }}
          game-versions: ${{ vars.MODRINTH_VERSIONS }}
          files: ${{ steps.project_info.outputs.jar_path }}
          primary-file: ${{ steps.project_info.outputs.jar_filename }}
          channel: 'release'
          featured: true
          status: 'listed'

      - name: 📄 Get Changed Files
        id: changed_files
        uses: tj-actions/changed-files@v44
        with:
          files: README.md

      - name: 🔄 Update Modrinth Project Body (if README.md changed)
        if: steps.changed_files.outputs.any_changed == 'true'
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_PAT }}
          PROJECT_ID: ${{ vars.MODRINTH_PID }}
        run: |
          README_CONTENT=$(cat README.md)
          
          if command -v jq &> /dev/null; then
            JSON_PAYLOAD=$(jq -n --arg body "$README_CONTENT" '{body: $body}')
          else
            README_ESCAPED=$(echo "$README_CONTENT" | sed 's/\\/\\\\/g; s/"/\\"/g; s/\n/\\n/g; s/\r//g')
            JSON_PAYLOAD="{\"body\": \"${README_ESCAPED}\"}"
          fi
          
          echo "Updating Modrinth project body for project ID: ${PROJECT_ID}"
          # echo "Payload: ${JSON_PAYLOAD}"

          curl --request PATCH \
            --url "https://api.modrinth.com/v2/project/${PROJECT_ID}" \
            --header "Authorization: ${MODRINTH_TOKEN}" \
            --header "Content-Type: application/json" \
            --data "${JSON_PAYLOAD}"